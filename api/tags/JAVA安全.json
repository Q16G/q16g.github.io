{"name":"JAVA安全","slug":"JAVA安全","count":2,"postlist":[{"title":"Java的CC1复现","uid":"0e8f1603b8315950f63fd25486814bb0","slug":"Java的CC1复现","date":"2023-08-30T14:08:47.000Z","updated":"2023-08-30T14:17:23.738Z","comments":true,"path":"api/articles/Java的CC1复现.json","keywords":null,"cover":[],"text":"JAVA的CC1是一直复现一直复现反反复复，这里就复现完了就进行记录。 复现：漏洞点（InvokerTransformer-&gt;transform）public InvokerTransformer(String methodName, Class[] paramTypes,...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"JAVA安全","slug":"JAVA安全","count":2,"path":"api/tags/JAVA安全.json"}],"author":{"name":"Q16G","slug":"blog-author","avatar":"https://www.helloimg.com/images/2023/05/23/oJaeo5.jpg","link":"/","description":"一个潜心学习网络安全的大学生","socials":{"github":"https://github.com/Q16G","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_57222016?spm=1018.2226.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"TemplatesImpl加载字节码和CC链复现","uid":"211e29fe185e9fd550f614a95fe4e743","slug":"TemplatesImpl加载字节码和CC链复现","date":"2023-09-03T13:45:01.000Z","updated":"2023-09-04T14:56:07.979Z","comments":true,"path":"api/articles/TemplatesImpl加载字节码和CC链复现.json","keywords":null,"cover":null,"text":"TemplatesImpl加载字节码漏洞点：因为之前学过，loadClass 使用的双亲委派，意思就是会先查看父类中是否可以加载，如果不能加载就由自己去加载。 Class defineClass(final byte[] b) &#123; return defineClass(...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"JAVA安全","slug":"JAVA安全","count":2,"path":"api/tags/JAVA安全.json"}],"author":{"name":"Q16G","slug":"blog-author","avatar":"https://www.helloimg.com/images/2023/05/23/oJaeo5.jpg","link":"/","description":"一个潜心学习网络安全的大学生","socials":{"github":"https://github.com/Q16G","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_57222016?spm=1018.2226.3001.5343","juejin":"","customs":{}}},"feature":true}]}